/* algemene styling */

* {
    box-sizing: border-box;
    font-family: Ubuntu;
}

:root {
    --background: #fff;
    --cardText: #000;
    --text: #000;
    --card: #fff;
    --button: #fff;
    --buttontext: #000;
}

body {
    display: flex;
    justify-content: space-around;
    align-items: center;
    margin: 0 2em 0 2em;
    height: 100vh;
    background-color: var(--background);
}

section:nth-of-type(1) {
    width: 25vw;
}

h1 {
    font-size: 3rem;
    margin: 0;
}

h2 {
    font-size: .8rem;
}

p {
    font-size: .8rem;
    font-weight: 100;
}

button {
    border-radius: 50% 50% 50% 50% / 50% 50% 50% 50%;
    width: 2rem;
    height: 2rem;
    border: solid 1px;
    border-color: var(--buttontext);
    font-size: 0.8em;
    color: var(--buttontext);
    background-color: var(--button);
    cursor: pointer;
}

button:active {
    scale: 0.9;
}

/* einde algemene styling */

/* Styling dialog */

dialog {
    border: none;
    width: 30vw;
    height: 100vh;
    margin-left: 1rem;
    margin-right: auto;
}

dialog[open] {
    animation: fadein .5s ease-in forwards;
}

@keyframes fadein {
    0% {
        left: -20rem;
    }

    100% {
        left: 0rem;
    }
}

dialog div {
    display: grid;
    grid-template-columns: 1fr 2rem;
    grid-template-rows: 1fr 3rem;
    height: 20vh;
}

dialog div h2 {
    grid-row: 2/3;
    grid-column: 1/2;
}

dialog div form {
    grid-row: 1/2;
    grid-column: 2/3;
}

dialog p {
    margin-top: 1rem;
}

dialog h2 {
    font-size: 1.5rem;
    margin: .5rem;
}

dialog p,
dialog ul li {
    font-family: 'Ubuntu', sans-serif;
    font-weight: 200;
    font-size: .8rem;
    margin: 0.5rem
}

dialog button img {
    width: 1rem;
}

dialog::backdrop {
    backdrop-filter: blur(3px);
}

/* Styling section 1 dialog */

/* grid styling */

.cards {
    margin: 1rem;
    width: 80vw;
    display: grid;

    grid-template-rows: repeat(12, 1fr);
    grid-template-columns: repeat(12, 1fr);
    gap: 5px;
    width: 50rem;
    height: 40rem;
}

.card:nth-of-type(1) {
    grid-row: 2 / 5;
    grid-column: 1 / 3;
}

.card:nth-of-type(2) {
    grid-row: 1 / 3;
    grid-column: 3 / 5;
}

.card:nth-of-type(3) {
    grid-row: 2 / 4;
    grid-column: 5 / 9;
}

.card:nth-of-type(4) {
    grid-row: 2 / 6;
    grid-column: 9 / 11;
}

.card:nth-of-type(5) {
    grid-row: 1 / 3;
    grid-column: 11 / 13;
}

.card:nth-of-type(6) {
    grid-row: 3 / 5;
    grid-column: 11 / 13;
}

.card:nth-of-type(7) {
    grid-row: 5 / 8;
    grid-column: 2 / 6;
}

.card:nth-of-type(8) {
    grid-row: 4 / 6;
    grid-column: 6 / 8;
}

.card:nth-of-type(9) {
    grid-row: 6 / 9;
    grid-column: 6 / 10;
}

.card:nth-of-type(10) {
    grid-row: 6 / 8;
    grid-column: 10 / 12;
}

.card:nth-of-type(11) {
    grid-row: 8 / 12;
    grid-column: 2 / 4;
}

.card:nth-of-type(12) {
    grid-row: 8 / 10;
    grid-column: 4 / 6;
}

.card:nth-of-type(13) {
    grid-row: 9 / 11;
    grid-column: 6 / 8;
}

.card:nth-of-type(14) {
    grid-row: 9 / 11;
    grid-column: 8 / 10;
}

.card:nth-of-type(15) {
    grid-row: 8 / 13;
    grid-column: 10 / 13;
}

.card:nth-of-type(16) {
    grid-row: 10 / 13;
    grid-column: 4 / 6;
    z-index: 1;
}

.card:nth-of-type(17) {
    grid-row: 11 / 13;
    grid-column: 7 / 9;
}

/* einde grid styling */

/* card styling */

.card,
.card figure {
    margin: 0;
    padding: 0
}

.card {
    background-color: transparent;
    perspective: 1000px;
    position: relative;
}

.card .cardDiv {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s;
    transform-style: preserve-3d;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
}

.card:hover .cardDiv {
    transform: rotateY(180deg);
    scale: 1.03;
}

/* .card:hover .popupButton {
    transition: transform 0.6s;
    visibility: visible;
} */

.card:hover {
    z-index: 5;
}

.frontOfCard,
.backOfCard {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.frontOfCard {
    color: black;
    background-color: transparent;
    perspective: 1000px;
}

.backOfCard {
    background-color: var(--card);
    color: black;
    transform: rotateY(180deg);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
}

.frontOfCard img {
    height: 100%;
    width: 100%;
    overflow: hidden;
    object-fit: cover;
}

.backOfCard>div {
    width: auto;
    height: auto;
    display: flex;
    justify-content: center;


    /* flex-direction: row-reverse; */

    /* Ik weet niet precies waarom, maar eerst komen de lege steren allemaal te staan en daarna pas de gevulde sterren. In de inspector kan je wel zien dat ze in de html wel goed om worden geplaatst. 
    Ik heb het nu met css row-reverse opgelost, maar dat is misschien niet de beste oplossing. */

    /* update: dit lag aan de styling verder bovenin het css bestand. */

    align-items: start;
}

.popupButton {
    margin-top: 0.8em;
    position: absolute;
    right: -1rem;
    top: -1rem;
    /* visibility: hidden; */
}

.popupButton img {
    width: 0.8rem
}

.backOfCard div img {
    width: 1.3rem;
}

/* einde card styling */


@media screen and (max-width: 912px) {
    body {
        display: block;
        height: auto;
        margin: 0;
    }

    h2 {
        font-size: 1rem;
    }

    .text {
        margin: 2rem 0 2rem 2rem;
    }

    dialog {
        width: 100vw;
    }

    .cards {
        grid-template-rows: repeat(35, 1fr);
        grid-template-columns: repeat(4, 1fr);
        width: 100vw;
        height: 500vw;
        padding: 2em;
        margin: 0;
        /* aspect-ratio: 1 / 8 ;  wilde ik voor height gebtuiken, maar dit werkte niet. */
    }

    .ratingStars img {
        width: 1.3em;
    }

    /* styling van het grid op mobile. Ik heb een heel ander grid moeten uitrekenen om het werkend te krijgen. */

    .card:nth-of-type(1) {
        grid-row: 2 / 5;
        grid-column: 1 / 3;
    }

    .card:nth-of-type(2) {
        grid-row: 1 / 3;
        grid-column: 3 / 5;
    }

    .card:nth-of-type(3) {
        grid-row: 5 / 7;
        grid-column: 1 / 5;
    }

    .card:nth-of-type(4) {
        grid-row: 7 / 10;
        grid-column: 1 / 3;
    }

    .card:nth-of-type(5) {
        grid-row: 10 / 12;
        grid-column: 1 / 3;
    }

    .card:nth-of-type(6) {
        grid-row: 9 / 11;
        grid-column: 3 / 5;
    }

    .card:nth-of-type(7) {
        grid-row: 12 / 15;
        grid-column: 1 / 5;
    }

    .card:nth-of-type(8) {
        grid-row: 15 / 17;
        grid-column: 3 / 5;
    }

    .card:nth-of-type(9) {
        grid-row: 17 / 20;
        grid-column: 1 / 5;
    }

    .card:nth-of-type(10) {
        grid-row: 20 / 22;
        grid-column: 1 / 3;
    }

    .card:nth-of-type(11) {
        grid-row: 21 / 25;
        grid-column: 3 / 5;
    }

    .card:nth-of-type(12) {
        grid-row: 22 / 24;
        grid-column: 1 / 3;
    }

    .card:nth-of-type(13) {
        grid-row: 25 / 27;
        grid-column: 1 / 3;
    }

    .card:nth-of-type(14) {
        grid-row: 26 / 28;
        grid-column: 3 / 5;
    }

    .card:nth-of-type(15) {
        grid-row: 28 / 33;
        grid-column: 2 / 4;
    }

    .card:nth-of-type(16) {
        grid-row: 33 / 36;
        grid-column: 1 / 3;
    }

    .card:nth-of-type(17) {
        grid-row: 34 / 36;
        grid-column: 3 / 5;
    }
}

/* Einde mediaquery voor mobile */